package ItemHereticSword

import Constants
import ItemObjEditing
import ObjectIdGenerator
import ObjectIds
import AbilityObjEditing
import ItemTooltipGenerator
import ClosureEvents

@configurable constant GOLD_COST = 100
@configurable constant LUMBER_COST = 0
@configurable constant CURSED = false
@configurable constant EXTRA_DAMAGE = 16.
@configurable constant CRIT_CHANCE = .15
@configurable constant CRIT_MULT = .3
@configurable constant RARITY = Rarity.UNCOMMON

@compiletime function generateItemHereticSword()
    let tgen = new ItemTooltipGenerator("Heretic sword", RARITY)
        ..addItemProperty("+" + EXTRA_DAMAGE.toInt().toString() + " attack damage")
        ..addItemProperty("+" + (CRIT_CHANCE*100).toInt().toString() + "% critical hit chance")
        ..addItemProperty("+" + (CRIT_MULT*100).toInt().toString() + "% critical hit damage")
        ..setShortDescription("Some item description")

    new ItemDefinition(ITEM_HERETICSWORD_ID, 'afac')
        ..setName(tgen.generateItemName())
        ..setTooltipExtended(tgen.generateItemDescription())
        ..setTooltipBasic(tgen.generateItemName())
        ..setDescription(tgen.generateItemDescription())
        ..setInterfaceIcon("ReplaceableTextures\\CommandButtons\\BTNTier3Sword.blp")
        ..setGoldCost(GOLD_COST)
        ..setLumberCost(LUMBER_COST)
        ..setLevel(GOLD_COST*GOLD_SHOP_OFFSET + LUMBER_COST)

init
    EventListener.add(EVENT_PLAYER_UNIT_PICKUP_ITEM) ->
        let u = GetManipulatingUnit()
        let i = GetManipulatedItem()
        if i.getTypeId() == ITEM_HERETICSWORD_ID
            LinkBonusToItem(u, BONUS_DAMAGE, EXTRA_DAMAGE, i)
            LinkBonusToItem(u, BONUS_CRITICAL_CHANCE, CRIT_CHANCE, i)
            LinkBonusToItem(u, BONUS_CRITICAL_DAMAGE, CRIT_MULT, i)